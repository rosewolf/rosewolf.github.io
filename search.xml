<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[利用GitHub Pages和Hexo搭建个人blog]]></title>
      <url>http://meethj.me/2016/08/15/%E5%88%A9%E7%94%A8GitHub%E5%92%8CHexo%E6%90%AD%E5%BB%BABlog/</url>
      <content type="html"><![CDATA[<p><strong>P.S.</strong>本文使用的是<code>Windows</code>、<code>Hexo 3.x版本</code>和<code>NexT.Pisces主题</code>。</p>
<h1 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a><em>写在前面</em></h1><p>最近搭建了自己的个人Blog，选用的是GitHub Pages + Hexo的方式，当然搭建Blog的方式还有很多种，比如使用Jekyll，再比如购买主机利用Wordpress搭建动态Blog等。<br><a id="more"></a></p>
<p>部分参考网站（Google不用贴了吧，或者度娘）：<br><a href="https://github.com/" target="_blank" rel="external">GitHub官网</a><br><a href="https://pages.github.com/" target="_blank" rel="external">GitHub Pages官网</a><br><a href="https://hexo.io/" target="_blank" rel="external">Hexo官网</a><br><a href="http://theme-next.iissnan.com/" target="_blank" rel="external">NexT主题使用文档</a><br><a href="https://nodejs.org/zh-cn/" target="_blank" rel="external">Node.js官网</a><br><a href="https://git-scm.com/" target="_blank" rel="external">Git官网</a><br><a href="https://sg.godaddy.com/zh/" target="_blank" rel="external">Godaddy官网</a>（购买域名已支持中文和支付宝）<br><a href="https://www.dnspod.cn/" target="_blank" rel="external">DNSPod官网</a><br><a href="https://portal.qiniu.com/" target="_blank" rel="external">七牛云官网</a>(作图床，实名认证后有10G免费空间，并没有收广告费hh~)    </p>
<h1 id="关于GitHub-Pages和Hexo"><a href="#关于GitHub-Pages和Hexo" class="headerlink" title="关于GitHub Pages和Hexo"></a><em>关于GitHub Pages和Hexo</em></h1><p>GitHub Pages  </p>
<blockquote>
<p>GitHub是一个通过Git进行版本控制的软件源代码托管服务，由GitHub公司（曾称Logical Awesome）的开发者Chris Wanstrath、PJ Hyett和Tom Preston-Werner使用Ruby on Rails编写而成。<br>GitHub Pages可以被认为是用户编写的、托管在github上的静态网页。  </p>
</blockquote>
<p><a href="https://github.com/" target="_blank" rel="external">GitHub</a> 是一个代码托管网站和社交编程网站。<a href="https://pages.github.com/" target="_blank" rel="external">GitHub Pages</a>是托管GitHub上静态网页的站点，提供300M免费空间（足够了）。</p>
<p>Hexo</p>
<blockquote>
<p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p>
<h1 id="安装步骤"><a href="#安装步骤" class="headerlink" title="安装步骤"></a><em>安装步骤</em></h1><p><code>P.S.以Windows为例，其他系统同理。出现问题请参阅官网或自行Google。</code></p>
<h2 id="1-安装Git-for-Windows"><a href="#1-安装Git-for-Windows" class="headerlink" title="1.安装Git for Windows"></a>1.安装Git for Windows</h2><p>下载后按提示一路安装即可（过程中有几个可选项Git Bash什么的建议选上很好用）。</p>
<h2 id="2-安装Node-js"><a href="#2-安装Node-js" class="headerlink" title="2.安装Node.js"></a>2.安装Node.js</h2><p>下载后按提示一路安装即可（新版自动配置Path变量，使<code>npm</code>命令生效）。</p>
<h2 id="3-通过SSH链接到GitHub"><a href="#3-通过SSH链接到GitHub" class="headerlink" title="3.通过SSH链接到GitHub"></a>3.通过SSH链接到GitHub</h2><p><code>P.S.此处不讨论GitHub  Windows客户端，如需请Goole</code></p>
<h3 id="3-1注册设置GitHub"><a href="#3-1注册设置GitHub" class="headerlink" title="3.1注册设置GitHub"></a>3.1注册设置GitHub</h3><ol>
<li>访问<a href="https://github.com/" target="_blank" rel="external">GitHub官网</a>   </li>
<li>在你的主页面点击右下角图标<code>New Repository</code>创建一个新的版本库，因为使用GitHub Pages搭建静态Blog（此处不讨论依附项目的gh-pages）,所以版本库的名字按照格式<code>用户名+github.io</code>填写，之后你将要访问的Blog地址也即是<code>https://用户名.github.io</code>。</li>
<li>其他保持默认，点击<code>Create repository</code>完成创建。  </li>
</ol>
</blockquote>
<h3 id="3-2配置SSH"><a href="#3-2配置SSH" class="headerlink" title="3.2配置SSH"></a>3.2配置SSH</h3><p>打开<code>Git Shell</code>，检查电脑上现有的SSH Key:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ cd ~/. ssh 检查本机的ssh密钥</div></pre></td></tr></table></figure></p>
<p>如果提示：No such file or directory说明你是第一次使用Git。执行下面指令生成SSH访问私钥和公钥:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ ssh-keygen -t rsa -C &quot;邮件地址@youremail.com&quot;</div></pre></td></tr></table></figure></p>
<p>P.S.  </p>
<ol>
<li>此处-C是大写；  </li>
<li>可以输入自己的邮箱地址。  </li>
</ol>
<p>然后系统会要求你输入密码（这个密码会在提交项目时使用，如果为空的话提交项目时则不用输入。设置密码是防止他人往你的项目里提交内容。）：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">Enter passphrase (empty for no passphrase):&lt;输入加密串&gt;</div><div class="line">Enter same passphrase again:&lt;再次输入加密串&gt;</div></pre></td></tr></table></figure></p>
<p>P.S.输入密码的时候不显示字符，直接输入即可。  </p>
<h3 id="3-3添加SSH-Key到GitHub上"><a href="#3-3添加SSH-Key到GitHub上" class="headerlink" title="3.3添加SSH Key到GitHub上"></a>3.3添加SSH Key到GitHub上</h3><p>在上一步配置SSH Key之后，需要添加到GitHub上，以完成SSH链接的设置。  </p>
<ol>
<li>打开电脑C盘文件<code>C:\Documents and Settings\Administrator.ssh\id_rsa.pub</code>。这个文件就是刚才生成的密钥。如果看不到这个文件，你需要设置显示隐藏文件。用Subline Text或者记事本打开将文件内容全部复制。  </li>
<li>登陆<code>GitHub</code>网页。依次点击：<code>右上角的头像</code>—&gt;<code>Settings</code>—&gt;<code>SSH and GPG keys</code> —&gt;<code>New SSH key</code>。  </li>
<li>把刚才复制的密钥粘贴到文本框中,点击<code>Add key</code>就完成了。<h3 id="3-4设置用户信息"><a href="#3-4设置用户信息" class="headerlink" title="3.4设置用户信息"></a>3.4设置用户信息</h3>在<code>Git Shell</code>里输入指令：<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ ssh -T git@github.com</div></pre></td></tr></table></figure>
</li>
</ol>
<p>返回如下，输入<code>yes</code>即可：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">The authenticity of host &apos;github.com (207.97.227.239)&apos; can&apos;t be established.</div><div class="line">RSA key fingerprint is 16:27:ac:a5:76:28:2d:36:63:1b:56:4d:eb:df:a6:48.</div><div class="line">Are you sure you want to continue connecting (yes/no)?</div></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Hi XXX! You&apos;ve successfully authenticated, but GitHub does not provide shell access.</div></pre></td></tr></table></figure>
<p>表明已经通过SSH连接至GitHub。因为Git会根据用户的名字和邮箱来记录提交。GitHub也是用这些信息来做权限的处理，所以接下来输入下面的代码进行个人信息的设置。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ git config --global user.name &quot;XXX&quot;//此处填写你的用户名</div><div class="line">$ git config --global user.email  &quot;xxx@xxx.com&quot;//此处填写你的邮箱</div></pre></td></tr></table></figure></p>
<h2 id="4-安装Hexo及配置"><a href="#4-安装Hexo及配置" class="headerlink" title="4.安装Hexo及配置"></a>4.安装Hexo及配置</h2><p>在自己喜欢的地方右键新建文件夹，例如<code>D:\Hexo</code>,右键<code>Git Bash</code>，输入下面指令即安装。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ npm install hexo-cli -g</div><div class="line">$ npm install hexo --save</div></pre></td></tr></table></figure></p>
<p>（很快安装完成,看到<code>warn</code>不用担心，如果命令无法执行，可更换taobao的npm源，指令：<code>npm install -g cnpm --registry=https://registry.npm.taobao.org</code>）。  </p>
<h3 id="4-1Hexo配置："><a href="#4-1Hexo配置：" class="headerlink" title="4.1Hexo配置："></a>4.1Hexo配置：</h3><p>执行以下指令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo init</div></pre></td></tr></table></figure></p>
<p>再输入下面指令安装插件：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo install</div></pre></td></tr></table></figure></p>
<p>新建完成后，文件夹目录如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">.</div><div class="line">├── _config.yml</div><div class="line">├── package.json</div><div class="line">├── scaffolds</div><div class="line">├── source</div><div class="line">|   ├── _drafts</div><div class="line">|   └── _posts</div><div class="line">└── themes</div></pre></td></tr></table></figure></p>
<ul>
<li>_config.yml 文件是网站的配置文件，可以在其中配置网站的大部分参数。</li>
<li>package.json 文件是应用程序的信息。</li>
<li>source 是资源文件夹，是用来存放用户资源的地方。</li>
<li>themes 是主题文件夹，Hexo会根据主题来生成不同的静态页面。</li>
<li>scaffolds是模板件夹，当新建文章的时候，Hexo会根据模板来建立文件。  </li>
</ul>
<p>至此，可以在本地查看效果，输入下面指令，然后在浏览器输入：<code>localhost:4000</code>即可。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ hexo g #生成静态页面，生成的内容在public文件夹下</div><div class="line">$ hexo s #启动本地服务，进行文章预览调试。hexo s --debug 命令可以用来调试</div></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">INFO  Hexo is running at http://0.0.0.0:4000/. Press Ctrl+C to stop.</div></pre></td></tr></table></figure>
<p>Hexo本地配置结束。</p>
<h3 id="4-2修改主题并部署静态网页到GitHub-Pages上"><a href="#4-2修改主题并部署静态网页到GitHub-Pages上" class="headerlink" title="4.2修改主题并部署静态网页到GitHub  Pages上"></a>4.2修改主题并部署静态网页到GitHub  Pages上</h3><blockquote>
<p>建议访问 <a href="https://hexo.io/" target="_blank" rel="external">Hexo官网</a> 了解如何配置Hexo  </p>
<p>建议访问 <a href="http://theme-next.iissnan.com/" target="_blank" rel="external">NexT主题使用文档</a> 了解如何配置NexT主题</p>
</blockquote>
<p>在 Hexo 中有两份主要的配置文件，其名称都是 <code>_config.yml</code>。 其中，一份位于站点根目录下，主要包含 Hexo 本身的配置；另一份位于主题目录下，这份配置由主题作者提供，主要用于配置主题相关的选项。为了描述方便，在以下说明中，将前者称为 <code>站点配置</code>文件， 后者称为 <code>主题配置</code>文件。  </p>
<p><code>在配置过程中请严格按照yaml语法输入代码，在“：”后注意空一格</code><br>在<code>Hexo</code>文件夹右键<code>Git Bash</code>，输入以下代码安装Hexo主题，我选用的是NexT的Pisces：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git clone https://github.com/iissnan/hexo-theme-next themes/next</div></pre></td></tr></table></figure></p>
<p>Clone完成后，用Subline Text或者使用vim指令等打开<code>站点配置文件</code>(<code>Hexo</code>文件下的<code>_config.yml</code>文件,不再赘述），找到<code>theme</code>字段，把<code>landscape</code>换为<code>next</code>，主题即启用。  </p>
<p>同样在该文件底下，找到<code>Deployment</code>字段，增加代码（yourname写你的GitHub用户名）：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">deploy:</div><div class="line">  type: git</div><div class="line">  repo: git@github.com:yourname/yourname.github.io.git</div><div class="line">  branch: master</div></pre></td></tr></table></figure></p>
<p>然后执行如下指令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm install hexo-deployer-git --save</div></pre></td></tr></table></figure></p>
<p>接着输入：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ hexo clean //清除缓存，网页正常时可忽略</div><div class="line">$ hexo g //生成静态页面</div><div class="line">$ hexo d //部署到GitHub上</div></pre></td></tr></table></figure></p>
<p>(可以直接用指令<code>$ hexo d -g</code>代替)，随后按照弹窗提示，输入之前建立SSH链接时的密码，完成后便部署成功，可登录<a href="http://yourname.github.io/访问自己上传的网站了。" target="_blank" rel="external">http://yourname.github.io/访问自己上传的网站了。</a>  </p>
<blockquote>
<p>后续怎么个性化使用主题官方网页已经解释得很清楚，请<a href="http://theme-next.iissnan.com/" target="_blank" rel="external">移步</a>，更多的css样式修改请自行Google。  </p>
</blockquote>
<p>发布新的Blog需要输入指令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo n &quot;文章标题&quot;</div></pre></td></tr></table></figure></p>
<p>然后在<code>Hexo</code>文件夹里，依次打开<code>D：\Hexo\sourse\_posts</code>，用<code>Markdown</code>编辑器打开编写即可，推荐使用<code>Subline Text 3</code>。保存后用指令<code>$ hexo d -g</code>部署便能在网站上看到。<br>更多关于写作的内容请<a href="https://hexo.io/zh-cn/docs/writing.html" target="_blank" rel="external">移步</a>。<br>更多关于Hexo、Git和Markdown的语法请自行Google。  </p>
<p>写作图床推荐使用<a href="https://portal.qiniu.com/" target="_blank" rel="external">七牛云</a>。  </p>
<h2 id="5-域名和DNS"><a href="#5-域名和DNS" class="headerlink" title="5.域名和DNS"></a>5.域名和DNS</h2><p>购买域名推荐<a href="https://sg.godaddy.com/zh/" target="_blank" rel="external">Godaddy官网</a>（已支持中文和支付宝，附<a href="http://www.gdcodecoupon.com/" target="_blank" rel="external">优惠码链接</a>。）<br>DNS解析推荐<a href="https://www.dnspod.cn/" target="_blank" rel="external">DNSPod官网</a> 。  </p>
<h3 id="5-1DNSPod上设置"><a href="#5-1DNSPod上设置" class="headerlink" title="5.1DNSPod上设置"></a>5.1DNSPod上设置</h3><p>在<code>DNSPod</code>作如图设置：<br><img src="http://obw0msndw.bkt.clouddn.com/DNS%E4%BF%AE%E6%94%B9.png" alt="">  </p>
<p>其中A的两条记录指向的ip地址是github Pages的提供的ip:  </p>
<ul>
<li>192.30.252.153</li>
<li>192.30.252.154  </li>
</ul>
<p>如博客不能登录，有可能是GitHub更改了空间服务的ip地址，记得及时到在<a href="https://pages.github.com/" target="_blank" rel="external">GitHub Pages官网</a>查看最新的ip即可</p>
<p>www指定的记录是你在GitHub注册的仓库。  </p>
<h3 id="5-2在Godaddy上修改DNS服务商地址-DNSPod官网教程"><a href="#5-2在Godaddy上修改DNS服务商地址-DNSPod官网教程" class="headerlink" title="5.2在Godaddy上修改DNS服务商地址(DNSPod官网教程)"></a>5.2在Godaddy上修改DNS服务商地址(<a href="https://support.dnspod.cn/Kb/showarticle/tsid/42/" target="_blank" rel="external">DNSPod官网教程</a>)</h3><p>登录<a href="https://sg.godaddy.com/zh/" target="_blank" rel="external">Godaddy官网</a>，管理域名，自定义域名服务器如下：<br><img src="http://obw0msndw.bkt.clouddn.com/godaddy%E8%87%AA%E5%AE%9A%E4%B9%89%E5%9F%9F%E5%90%8D%E6%9C%8D%E5%8A%A1%E5%99%A8.png" alt=""></p>
<h3 id="5-3增加CNAME文件"><a href="#5-3增加CNAME文件" class="headerlink" title="5.3增加CNAME文件"></a>5.3增加CNAME文件</h3><p><code>CNAME</code>文件是用于告知GitHub服务器即将把哪个域名绑定到<code>yourname.github.io</code>网址上。所以，<code>CNAME</code>中填写申请的域名,如：meethj.me。  </p>
<p>网络上搜索到的各种教程中，都把<code>CNAME</code>是直接在GitHub仓库中创建，然后手动填入自定义域名的。当然，手动创建<code>CNAME文件</code>并写入域名可以让域名跳转成功，但是，当下一次执行<code>$ hexo g</code>和<code>$ hexo d</code>进行网页编译部署时，会发现GitHub库中的<code>CNAME</code>文件被修改为<code>yourname.github.io</code>，此时通过浏览器访问自定义域名时，会发现博客页面404。  </p>
<p>所以，针对<code>CNAME</code>文件，确保你是在<code>Hexo</code>的<code>source</code>目录下新建<code>CNAME</code>文件，这样每次构建时才会对应在仓库的根目录生成<code>CNAME</code>。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[陈风·月出]]></title>
      <url>http://meethj.me/2016/08/15/%E9%99%88%E9%A3%8E%C2%B7%E6%9C%88%E5%87%BA/</url>
      <content type="html"><![CDATA[<blockquote class="blockquote-center"><p>【周】无名氏<br>月出皎兮，佼人燎兮；<br>舒窈纠兮，劳心悄兮。<br>月出皓兮，佼人懰兮；<br>舒忧受兮，劳心慅兮。<br>月出照兮，佼人燎兮；<br>舒夭绍兮，劳心惨兮。  </p>
</blockquote>  
<center><br>    <img src="http://obw0msndw.bkt.clouddn.com/IMG_1358%282%29.JPG" title=" " high="300" width="300" <="" center=""></center>]]></content>
    </entry>
    
  
  
</search>
